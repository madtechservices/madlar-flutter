import '../../../modules/{{ module }}/controllers/{{ module }}EditController.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'package:ui_x/ui_x.dart';

import '../../../helpers/Global.dart';
import '../../../shared/views/components/SideMenu.dart';
import '../../../shared/views/errors/NotConnectedErrorPage.dart';
import '../../../shared/views/layouts/MasterLayout.dart';
import '../../../shared/views/widgets/LoadingIconWidget.dart';
import '../controllers/{{ module }}Controller.dart';
import '../../../../config/theme/AppTheme.dart';

class {{ module }}PageEdit extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return GetBuilder<{{ module }}EditController>(
      init: {{ module }}EditController(),
      builder: ({{ module }}EditController controller) {
        return !controller.isConnected
            ? NotConnectedErrorPage()
            : controller.isBusy
                ? LoadingIconWidget(message: "Please wait...")
                : MasterLayout(
                    title: "Edit {{ title }}",
                    body: SafeArea(
                    child: SingleChildScrollView(
                      child: GestureDetector(
                        onTap: () => Keyboard.hide(context),
                        child: Container(
                          padding: EdgeInsets.symmetric(vertical: 30, horizontal: 30),
                          color: Colors.transparent,
                          width: double.infinity,
                          height: screen.height - 55,
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.stretch,
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            mainAxisSize: MainAxisSize.max,
                            children: <Widget>[
                              Form(
                                key: controller.formKey,
                                autovalidateMode: AutovalidateMode.onUserInteraction,
                                child: Column(
                                  children: [
                                    {{ fields }}
                                    Button.block(
                                      key: UniqueKey(),
                                      label: "Save",
                                      onTap: (ButtonController btn) async {
                                        btn.setBusy(true).setDisabled(true);
                                        await controller.store();
                                        btn.setBusy(false).setDisabled(false);
                                      },
                                    )
                                  ],
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
          ),
                  );
      },
    );
  }
}

